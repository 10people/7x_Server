// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Jewel.proto

package qxmobile.protobuf;

public final class JewelProtos {
  private JewelProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface JewelInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 itemId = 1;
    /**
     * <code>required int32 itemId = 1;</code>
     *
     * <pre>
     *宝石的道具id
     * </pre>
     */
    boolean hasItemId();
    /**
     * <code>required int32 itemId = 1;</code>
     *
     * <pre>
     *宝石的道具id
     * </pre>
     */
    int getItemId();

    // required int32 exp = 2;
    /**
     * <code>required int32 exp = 2;</code>
     *
     * <pre>
     *宝石拥有的经验	
     * </pre>
     */
    boolean hasExp();
    /**
     * <code>required int32 exp = 2;</code>
     *
     * <pre>
     *宝石拥有的经验	
     * </pre>
     */
    int getExp();

    // required int32 possionId = 3;
    /**
     * <code>required int32 possionId = 3;</code>
     *
     * <pre>
     *宝石镶嵌在装备上的插槽位置，0~4代表装备上的位置（正上方开始逆时针数），-1表示在背包
     * </pre>
     */
    boolean hasPossionId();
    /**
     * <code>required int32 possionId = 3;</code>
     *
     * <pre>
     *宝石镶嵌在装备上的插槽位置，0~4代表装备上的位置（正上方开始逆时针数），-1表示在背包
     * </pre>
     */
    int getPossionId();

    // optional int64 equlpId = 4;
    /**
     * <code>optional int64 equlpId = 4;</code>
     *
     * <pre>
     *宝石镶嵌的装备的dbid，跟客户端商议是否需要发送
     * </pre>
     */
    boolean hasEqulpId();
    /**
     * <code>optional int64 equlpId = 4;</code>
     *
     * <pre>
     *宝石镶嵌的装备的dbid，跟客户端商议是否需要发送
     * </pre>
     */
    long getEqulpId();
  }
  /**
   * Protobuf type {@code qxmobile.protobuf.JewelInfo}
   *
   * <pre>
   *单独一颗宝石/单独一个镶嵌孔的信息
   * </pre>
   */
  public static final class JewelInfo extends
      com.google.protobuf.GeneratedMessage
      implements JewelInfoOrBuilder {
    // Use JewelInfo.newBuilder() to construct.
    private JewelInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private JewelInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final JewelInfo defaultInstance;
    public static JewelInfo getDefaultInstance() {
      return defaultInstance;
    }

    public JewelInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private JewelInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              itemId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              exp_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              possionId_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              equlpId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return qxmobile.protobuf.JewelProtos.internal_static_qxmobile_protobuf_JewelInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return qxmobile.protobuf.JewelProtos.internal_static_qxmobile_protobuf_JewelInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              qxmobile.protobuf.JewelProtos.JewelInfo.class, qxmobile.protobuf.JewelProtos.JewelInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<JewelInfo> PARSER =
        new com.google.protobuf.AbstractParser<JewelInfo>() {
      public JewelInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JewelInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<JewelInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 itemId = 1;
    public static final int ITEMID_FIELD_NUMBER = 1;
    private int itemId_;
    /**
     * <code>required int32 itemId = 1;</code>
     *
     * <pre>
     *宝石的道具id
     * </pre>
     */
    public boolean hasItemId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 itemId = 1;</code>
     *
     * <pre>
     *宝石的道具id
     * </pre>
     */
    public int getItemId() {
      return itemId_;
    }

    // required int32 exp = 2;
    public static final int EXP_FIELD_NUMBER = 2;
    private int exp_;
    /**
     * <code>required int32 exp = 2;</code>
     *
     * <pre>
     *宝石拥有的经验	
     * </pre>
     */
    public boolean hasExp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 exp = 2;</code>
     *
     * <pre>
     *宝石拥有的经验	
     * </pre>
     */
    public int getExp() {
      return exp_;
    }

    // required int32 possionId = 3;
    public static final int POSSIONID_FIELD_NUMBER = 3;
    private int possionId_;
    /**
     * <code>required int32 possionId = 3;</code>
     *
     * <pre>
     *宝石镶嵌在装备上的插槽位置，0~4代表装备上的位置（正上方开始逆时针数），-1表示在背包
     * </pre>
     */
    public boolean hasPossionId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 possionId = 3;</code>
     *
     * <pre>
     *宝石镶嵌在装备上的插槽位置，0~4代表装备上的位置（正上方开始逆时针数），-1表示在背包
     * </pre>
     */
    public int getPossionId() {
      return possionId_;
    }

    // optional int64 equlpId = 4;
    public static final int EQULPID_FIELD_NUMBER = 4;
    private long equlpId_;
    /**
     * <code>optional int64 equlpId = 4;</code>
     *
     * <pre>
     *宝石镶嵌的装备的dbid，跟客户端商议是否需要发送
     * </pre>
     */
    public boolean hasEqulpId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 equlpId = 4;</code>
     *
     * <pre>
     *宝石镶嵌的装备的dbid，跟客户端商议是否需要发送
     * </pre>
     */
    public long getEqulpId() {
      return equlpId_;
    }

    private void initFields() {
      itemId_ = 0;
      exp_ = 0;
      possionId_ = 0;
      equlpId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasItemId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasExp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPossionId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, itemId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, exp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, possionId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, equlpId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, itemId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, exp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, possionId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, equlpId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static qxmobile.protobuf.JewelProtos.JewelInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static qxmobile.protobuf.JewelProtos.JewelInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static qxmobile.protobuf.JewelProtos.JewelInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static qxmobile.protobuf.JewelProtos.JewelInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static qxmobile.protobuf.JewelProtos.JewelInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static qxmobile.protobuf.JewelProtos.JewelInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static qxmobile.protobuf.JewelProtos.JewelInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static qxmobile.protobuf.JewelProtos.JewelInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static qxmobile.protobuf.JewelProtos.JewelInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static qxmobile.protobuf.JewelProtos.JewelInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(qxmobile.protobuf.JewelProtos.JewelInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code qxmobile.protobuf.JewelInfo}
     *
     * <pre>
     *单独一颗宝石/单独一个镶嵌孔的信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements qxmobile.protobuf.JewelProtos.JewelInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return qxmobile.protobuf.JewelProtos.internal_static_qxmobile_protobuf_JewelInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return qxmobile.protobuf.JewelProtos.internal_static_qxmobile_protobuf_JewelInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                qxmobile.protobuf.JewelProtos.JewelInfo.class, qxmobile.protobuf.JewelProtos.JewelInfo.Builder.class);
      }

      // Construct using qxmobile.protobuf.JewelProtos.JewelInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        itemId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        exp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        possionId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        equlpId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return qxmobile.protobuf.JewelProtos.internal_static_qxmobile_protobuf_JewelInfo_descriptor;
      }

      public qxmobile.protobuf.JewelProtos.JewelInfo getDefaultInstanceForType() {
        return qxmobile.protobuf.JewelProtos.JewelInfo.getDefaultInstance();
      }

      public qxmobile.protobuf.JewelProtos.JewelInfo build() {
        qxmobile.protobuf.JewelProtos.JewelInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public qxmobile.protobuf.JewelProtos.JewelInfo buildPartial() {
        qxmobile.protobuf.JewelProtos.JewelInfo result = new qxmobile.protobuf.JewelProtos.JewelInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.itemId_ = itemId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.exp_ = exp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.possionId_ = possionId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.equlpId_ = equlpId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof qxmobile.protobuf.JewelProtos.JewelInfo) {
          return mergeFrom((qxmobile.protobuf.JewelProtos.JewelInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(qxmobile.protobuf.JewelProtos.JewelInfo other) {
        if (other == qxmobile.protobuf.JewelProtos.JewelInfo.getDefaultInstance()) return this;
        if (other.hasItemId()) {
          setItemId(other.getItemId());
        }
        if (other.hasExp()) {
          setExp(other.getExp());
        }
        if (other.hasPossionId()) {
          setPossionId(other.getPossionId());
        }
        if (other.hasEqulpId()) {
          setEqulpId(other.getEqulpId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasItemId()) {
          
          return false;
        }
        if (!hasExp()) {
          
          return false;
        }
        if (!hasPossionId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        qxmobile.protobuf.JewelProtos.JewelInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (qxmobile.protobuf.JewelProtos.JewelInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 itemId = 1;
      private int itemId_ ;
      /**
       * <code>required int32 itemId = 1;</code>
       *
       * <pre>
       *宝石的道具id
       * </pre>
       */
      public boolean hasItemId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 itemId = 1;</code>
       *
       * <pre>
       *宝石的道具id
       * </pre>
       */
      public int getItemId() {
        return itemId_;
      }
      /**
       * <code>required int32 itemId = 1;</code>
       *
       * <pre>
       *宝石的道具id
       * </pre>
       */
      public Builder setItemId(int value) {
        bitField0_ |= 0x00000001;
        itemId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 itemId = 1;</code>
       *
       * <pre>
       *宝石的道具id
       * </pre>
       */
      public Builder clearItemId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        itemId_ = 0;
        onChanged();
        return this;
      }

      // required int32 exp = 2;
      private int exp_ ;
      /**
       * <code>required int32 exp = 2;</code>
       *
       * <pre>
       *宝石拥有的经验	
       * </pre>
       */
      public boolean hasExp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 exp = 2;</code>
       *
       * <pre>
       *宝石拥有的经验	
       * </pre>
       */
      public int getExp() {
        return exp_;
      }
      /**
       * <code>required int32 exp = 2;</code>
       *
       * <pre>
       *宝石拥有的经验	
       * </pre>
       */
      public Builder setExp(int value) {
        bitField0_ |= 0x00000002;
        exp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 exp = 2;</code>
       *
       * <pre>
       *宝石拥有的经验	
       * </pre>
       */
      public Builder clearExp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        exp_ = 0;
        onChanged();
        return this;
      }

      // required int32 possionId = 3;
      private int possionId_ ;
      /**
       * <code>required int32 possionId = 3;</code>
       *
       * <pre>
       *宝石镶嵌在装备上的插槽位置，0~4代表装备上的位置（正上方开始逆时针数），-1表示在背包
       * </pre>
       */
      public boolean hasPossionId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 possionId = 3;</code>
       *
       * <pre>
       *宝石镶嵌在装备上的插槽位置，0~4代表装备上的位置（正上方开始逆时针数），-1表示在背包
       * </pre>
       */
      public int getPossionId() {
        return possionId_;
      }
      /**
       * <code>required int32 possionId = 3;</code>
       *
       * <pre>
       *宝石镶嵌在装备上的插槽位置，0~4代表装备上的位置（正上方开始逆时针数），-1表示在背包
       * </pre>
       */
      public Builder setPossionId(int value) {
        bitField0_ |= 0x00000004;
        possionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 possionId = 3;</code>
       *
       * <pre>
       *宝石镶嵌在装备上的插槽位置，0~4代表装备上的位置（正上方开始逆时针数），-1表示在背包
       * </pre>
       */
      public Builder clearPossionId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        possionId_ = 0;
        onChanged();
        return this;
      }

      // optional int64 equlpId = 4;
      private long equlpId_ ;
      /**
       * <code>optional int64 equlpId = 4;</code>
       *
       * <pre>
       *宝石镶嵌的装备的dbid，跟客户端商议是否需要发送
       * </pre>
       */
      public boolean hasEqulpId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 equlpId = 4;</code>
       *
       * <pre>
       *宝石镶嵌的装备的dbid，跟客户端商议是否需要发送
       * </pre>
       */
      public long getEqulpId() {
        return equlpId_;
      }
      /**
       * <code>optional int64 equlpId = 4;</code>
       *
       * <pre>
       *宝石镶嵌的装备的dbid，跟客户端商议是否需要发送
       * </pre>
       */
      public Builder setEqulpId(long value) {
        bitField0_ |= 0x00000008;
        equlpId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 equlpId = 4;</code>
       *
       * <pre>
       *宝石镶嵌的装备的dbid，跟客户端商议是否需要发送
       * </pre>
       */
      public Builder clearEqulpId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        equlpId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:qxmobile.protobuf.JewelInfo)
    }

    static {
      defaultInstance = new JewelInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:qxmobile.protobuf.JewelInfo)
  }

  public interface JewelListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int64 equlpId = 1;
    /**
     * <code>required int64 equlpId = 1;</code>
     *
     * <pre>
     *宝石所在装备dbID
     * </pre>
     */
    boolean hasEqulpId();
    /**
     * <code>required int64 equlpId = 1;</code>
     *
     * <pre>
     *宝石所在装备dbID
     * </pre>
     */
    long getEqulpId();

    // required int32 jewelNum = 2;
    /**
     * <code>required int32 jewelNum = 2;</code>
     *
     * <pre>
     *宝石所在装备孔数量
     * </pre>
     */
    boolean hasJewelNum();
    /**
     * <code>required int32 jewelNum = 2;</code>
     *
     * <pre>
     *宝石所在装备孔数量
     * </pre>
     */
    int getJewelNum();

    // repeated .qxmobile.protobuf.JewelInfo list = 3;
    /**
     * <code>repeated .qxmobile.protobuf.JewelInfo list = 3;</code>
     *
     * <pre>
     *用于发送宝石列表	
     * </pre>
     */
    java.util.List<qxmobile.protobuf.JewelProtos.JewelInfo> 
        getListList();
    /**
     * <code>repeated .qxmobile.protobuf.JewelInfo list = 3;</code>
     *
     * <pre>
     *用于发送宝石列表	
     * </pre>
     */
    qxmobile.protobuf.JewelProtos.JewelInfo getList(int index);
    /**
     * <code>repeated .qxmobile.protobuf.JewelInfo list = 3;</code>
     *
     * <pre>
     *用于发送宝石列表	
     * </pre>
     */
    int getListCount();
    /**
     * <code>repeated .qxmobile.protobuf.JewelInfo list = 3;</code>
     *
     * <pre>
     *用于发送宝石列表	
     * </pre>
     */
    java.util.List<? extends qxmobile.protobuf.JewelProtos.JewelInfoOrBuilder> 
        getListOrBuilderList();
    /**
     * <code>repeated .qxmobile.protobuf.JewelInfo list = 3;</code>
     *
     * <pre>
     *用于发送宝石列表	
     * </pre>
     */
    qxmobile.protobuf.JewelProtos.JewelInfoOrBuilder getListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code qxmobile.protobuf.JewelList}
   *
   * <pre>
   *一件装备上所有宝石的信息
   * </pre>
   */
  public static final class JewelList extends
      com.google.protobuf.GeneratedMessage
      implements JewelListOrBuilder {
    // Use JewelList.newBuilder() to construct.
    private JewelList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private JewelList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final JewelList defaultInstance;
    public static JewelList getDefaultInstance() {
      return defaultInstance;
    }

    public JewelList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private JewelList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              equlpId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              jewelNum_ = input.readInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                list_ = new java.util.ArrayList<qxmobile.protobuf.JewelProtos.JewelInfo>();
                mutable_bitField0_ |= 0x00000004;
              }
              list_.add(input.readMessage(qxmobile.protobuf.JewelProtos.JewelInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          list_ = java.util.Collections.unmodifiableList(list_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return qxmobile.protobuf.JewelProtos.internal_static_qxmobile_protobuf_JewelList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return qxmobile.protobuf.JewelProtos.internal_static_qxmobile_protobuf_JewelList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              qxmobile.protobuf.JewelProtos.JewelList.class, qxmobile.protobuf.JewelProtos.JewelList.Builder.class);
    }

    public static com.google.protobuf.Parser<JewelList> PARSER =
        new com.google.protobuf.AbstractParser<JewelList>() {
      public JewelList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JewelList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<JewelList> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 equlpId = 1;
    public static final int EQULPID_FIELD_NUMBER = 1;
    private long equlpId_;
    /**
     * <code>required int64 equlpId = 1;</code>
     *
     * <pre>
     *宝石所在装备dbID
     * </pre>
     */
    public boolean hasEqulpId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 equlpId = 1;</code>
     *
     * <pre>
     *宝石所在装备dbID
     * </pre>
     */
    public long getEqulpId() {
      return equlpId_;
    }

    // required int32 jewelNum = 2;
    public static final int JEWELNUM_FIELD_NUMBER = 2;
    private int jewelNum_;
    /**
     * <code>required int32 jewelNum = 2;</code>
     *
     * <pre>
     *宝石所在装备孔数量
     * </pre>
     */
    public boolean hasJewelNum() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 jewelNum = 2;</code>
     *
     * <pre>
     *宝石所在装备孔数量
     * </pre>
     */
    public int getJewelNum() {
      return jewelNum_;
    }

    // repeated .qxmobile.protobuf.JewelInfo list = 3;
    public static final int LIST_FIELD_NUMBER = 3;
    private java.util.List<qxmobile.protobuf.JewelProtos.JewelInfo> list_;
    /**
     * <code>repeated .qxmobile.protobuf.JewelInfo list = 3;</code>
     *
     * <pre>
     *用于发送宝石列表	
     * </pre>
     */
    public java.util.List<qxmobile.protobuf.JewelProtos.JewelInfo> getListList() {
      return list_;
    }
    /**
     * <code>repeated .qxmobile.protobuf.JewelInfo list = 3;</code>
     *
     * <pre>
     *用于发送宝石列表	
     * </pre>
     */
    public java.util.List<? extends qxmobile.protobuf.JewelProtos.JewelInfoOrBuilder> 
        getListOrBuilderList() {
      return list_;
    }
    /**
     * <code>repeated .qxmobile.protobuf.JewelInfo list = 3;</code>
     *
     * <pre>
     *用于发送宝石列表	
     * </pre>
     */
    public int getListCount() {
      return list_.size();
    }
    /**
     * <code>repeated .qxmobile.protobuf.JewelInfo list = 3;</code>
     *
     * <pre>
     *用于发送宝石列表	
     * </pre>
     */
    public qxmobile.protobuf.JewelProtos.JewelInfo getList(int index) {
      return list_.get(index);
    }
    /**
     * <code>repeated .qxmobile.protobuf.JewelInfo list = 3;</code>
     *
     * <pre>
     *用于发送宝石列表	
     * </pre>
     */
    public qxmobile.protobuf.JewelProtos.JewelInfoOrBuilder getListOrBuilder(
        int index) {
      return list_.get(index);
    }

    private void initFields() {
      equlpId_ = 0L;
      jewelNum_ = 0;
      list_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasEqulpId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasJewelNum()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getListCount(); i++) {
        if (!getList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, equlpId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, jewelNum_);
      }
      for (int i = 0; i < list_.size(); i++) {
        output.writeMessage(3, list_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, equlpId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, jewelNum_);
      }
      for (int i = 0; i < list_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, list_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static qxmobile.protobuf.JewelProtos.JewelList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static qxmobile.protobuf.JewelProtos.JewelList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static qxmobile.protobuf.JewelProtos.JewelList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static qxmobile.protobuf.JewelProtos.JewelList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static qxmobile.protobuf.JewelProtos.JewelList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static qxmobile.protobuf.JewelProtos.JewelList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static qxmobile.protobuf.JewelProtos.JewelList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static qxmobile.protobuf.JewelProtos.JewelList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static qxmobile.protobuf.JewelProtos.JewelList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static qxmobile.protobuf.JewelProtos.JewelList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(qxmobile.protobuf.JewelProtos.JewelList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code qxmobile.protobuf.JewelList}
     *
     * <pre>
     *一件装备上所有宝石的信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements qxmobile.protobuf.JewelProtos.JewelListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return qxmobile.protobuf.JewelProtos.internal_static_qxmobile_protobuf_JewelList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return qxmobile.protobuf.JewelProtos.internal_static_qxmobile_protobuf_JewelList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                qxmobile.protobuf.JewelProtos.JewelList.class, qxmobile.protobuf.JewelProtos.JewelList.Builder.class);
      }

      // Construct using qxmobile.protobuf.JewelProtos.JewelList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        equlpId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        jewelNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (listBuilder_ == null) {
          list_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          listBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return qxmobile.protobuf.JewelProtos.internal_static_qxmobile_protobuf_JewelList_descriptor;
      }

      public qxmobile.protobuf.JewelProtos.JewelList getDefaultInstanceForType() {
        return qxmobile.protobuf.JewelProtos.JewelList.getDefaultInstance();
      }

      public qxmobile.protobuf.JewelProtos.JewelList build() {
        qxmobile.protobuf.JewelProtos.JewelList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public qxmobile.protobuf.JewelProtos.JewelList buildPartial() {
        qxmobile.protobuf.JewelProtos.JewelList result = new qxmobile.protobuf.JewelProtos.JewelList(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.equlpId_ = equlpId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.jewelNum_ = jewelNum_;
        if (listBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            list_ = java.util.Collections.unmodifiableList(list_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.list_ = list_;
        } else {
          result.list_ = listBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof qxmobile.protobuf.JewelProtos.JewelList) {
          return mergeFrom((qxmobile.protobuf.JewelProtos.JewelList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(qxmobile.protobuf.JewelProtos.JewelList other) {
        if (other == qxmobile.protobuf.JewelProtos.JewelList.getDefaultInstance()) return this;
        if (other.hasEqulpId()) {
          setEqulpId(other.getEqulpId());
        }
        if (other.hasJewelNum()) {
          setJewelNum(other.getJewelNum());
        }
        if (listBuilder_ == null) {
          if (!other.list_.isEmpty()) {
            if (list_.isEmpty()) {
              list_ = other.list_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureListIsMutable();
              list_.addAll(other.list_);
            }
            onChanged();
          }
        } else {
          if (!other.list_.isEmpty()) {
            if (listBuilder_.isEmpty()) {
              listBuilder_.dispose();
              listBuilder_ = null;
              list_ = other.list_;
              bitField0_ = (bitField0_ & ~0x00000004);
              listBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getListFieldBuilder() : null;
            } else {
              listBuilder_.addAllMessages(other.list_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasEqulpId()) {
          
          return false;
        }
        if (!hasJewelNum()) {
          
          return false;
        }
        for (int i = 0; i < getListCount(); i++) {
          if (!getList(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        qxmobile.protobuf.JewelProtos.JewelList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (qxmobile.protobuf.JewelProtos.JewelList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 equlpId = 1;
      private long equlpId_ ;
      /**
       * <code>required int64 equlpId = 1;</code>
       *
       * <pre>
       *宝石所在装备dbID
       * </pre>
       */
      public boolean hasEqulpId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 equlpId = 1;</code>
       *
       * <pre>
       *宝石所在装备dbID
       * </pre>
       */
      public long getEqulpId() {
        return equlpId_;
      }
      /**
       * <code>required int64 equlpId = 1;</code>
       *
       * <pre>
       *宝石所在装备dbID
       * </pre>
       */
      public Builder setEqulpId(long value) {
        bitField0_ |= 0x00000001;
        equlpId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 equlpId = 1;</code>
       *
       * <pre>
       *宝石所在装备dbID
       * </pre>
       */
      public Builder clearEqulpId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        equlpId_ = 0L;
        onChanged();
        return this;
      }

      // required int32 jewelNum = 2;
      private int jewelNum_ ;
      /**
       * <code>required int32 jewelNum = 2;</code>
       *
       * <pre>
       *宝石所在装备孔数量
       * </pre>
       */
      public boolean hasJewelNum() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 jewelNum = 2;</code>
       *
       * <pre>
       *宝石所在装备孔数量
       * </pre>
       */
      public int getJewelNum() {
        return jewelNum_;
      }
      /**
       * <code>required int32 jewelNum = 2;</code>
       *
       * <pre>
       *宝石所在装备孔数量
       * </pre>
       */
      public Builder setJewelNum(int value) {
        bitField0_ |= 0x00000002;
        jewelNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 jewelNum = 2;</code>
       *
       * <pre>
       *宝石所在装备孔数量
       * </pre>
       */
      public Builder clearJewelNum() {
        bitField0_ = (bitField0_ & ~0x00000002);
        jewelNum_ = 0;
        onChanged();
        return this;
      }

      // repeated .qxmobile.protobuf.JewelInfo list = 3;
      private java.util.List<qxmobile.protobuf.JewelProtos.JewelInfo> list_ =
        java.util.Collections.emptyList();
      private void ensureListIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          list_ = new java.util.ArrayList<qxmobile.protobuf.JewelProtos.JewelInfo>(list_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          qxmobile.protobuf.JewelProtos.JewelInfo, qxmobile.protobuf.JewelProtos.JewelInfo.Builder, qxmobile.protobuf.JewelProtos.JewelInfoOrBuilder> listBuilder_;

      /**
       * <code>repeated .qxmobile.protobuf.JewelInfo list = 3;</code>
       *
       * <pre>
       *用于发送宝石列表	
       * </pre>
       */
      public java.util.List<qxmobile.protobuf.JewelProtos.JewelInfo> getListList() {
        if (listBuilder_ == null) {
          return java.util.Collections.unmodifiableList(list_);
        } else {
          return listBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .qxmobile.protobuf.JewelInfo list = 3;</code>
       *
       * <pre>
       *用于发送宝石列表	
       * </pre>
       */
      public int getListCount() {
        if (listBuilder_ == null) {
          return list_.size();
        } else {
          return listBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .qxmobile.protobuf.JewelInfo list = 3;</code>
       *
       * <pre>
       *用于发送宝石列表	
       * </pre>
       */
      public qxmobile.protobuf.JewelProtos.JewelInfo getList(int index) {
        if (listBuilder_ == null) {
          return list_.get(index);
        } else {
          return listBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .qxmobile.protobuf.JewelInfo list = 3;</code>
       *
       * <pre>
       *用于发送宝石列表	
       * </pre>
       */
      public Builder setList(
          int index, qxmobile.protobuf.JewelProtos.JewelInfo value) {
        if (listBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureListIsMutable();
          list_.set(index, value);
          onChanged();
        } else {
          listBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .qxmobile.protobuf.JewelInfo list = 3;</code>
       *
       * <pre>
       *用于发送宝石列表	
       * </pre>
       */
      public Builder setList(
          int index, qxmobile.protobuf.JewelProtos.JewelInfo.Builder builderForValue) {
        if (listBuilder_ == null) {
          ensureListIsMutable();
          list_.set(index, builderForValue.build());
          onChanged();
        } else {
          listBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .qxmobile.protobuf.JewelInfo list = 3;</code>
       *
       * <pre>
       *用于发送宝石列表	
       * </pre>
       */
      public Builder addList(qxmobile.protobuf.JewelProtos.JewelInfo value) {
        if (listBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureListIsMutable();
          list_.add(value);
          onChanged();
        } else {
          listBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .qxmobile.protobuf.JewelInfo list = 3;</code>
       *
       * <pre>
       *用于发送宝石列表	
       * </pre>
       */
      public Builder addList(
          int index, qxmobile.protobuf.JewelProtos.JewelInfo value) {
        if (listBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureListIsMutable();
          list_.add(index, value);
          onChanged();
        } else {
          listBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .qxmobile.protobuf.JewelInfo list = 3;</code>
       *
       * <pre>
       *用于发送宝石列表	
       * </pre>
       */
      public Builder addList(
          qxmobile.protobuf.JewelProtos.JewelInfo.Builder builderForValue) {
        if (listBuilder_ == null) {
          ensureListIsMutable();
          list_.add(builderForValue.build());
          onChanged();
        } else {
          listBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .qxmobile.protobuf.JewelInfo list = 3;</code>
       *
       * <pre>
       *用于发送宝石列表	
       * </pre>
       */
      public Builder addList(
          int index, qxmobile.protobuf.JewelProtos.JewelInfo.Builder builderForValue) {
        if (listBuilder_ == null) {
          ensureListIsMutable();
          list_.add(index, builderForValue.build());
          onChanged();
        } else {
          listBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .qxmobile.protobuf.JewelInfo list = 3;</code>
       *
       * <pre>
       *用于发送宝石列表	
       * </pre>
       */
      public Builder addAllList(
          java.lang.Iterable<? extends qxmobile.protobuf.JewelProtos.JewelInfo> values) {
        if (listBuilder_ == null) {
          ensureListIsMutable();
          super.addAll(values, list_);
          onChanged();
        } else {
          listBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .qxmobile.protobuf.JewelInfo list = 3;</code>
       *
       * <pre>
       *用于发送宝石列表	
       * </pre>
       */
      public Builder clearList() {
        if (listBuilder_ == null) {
          list_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          listBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .qxmobile.protobuf.JewelInfo list = 3;</code>
       *
       * <pre>
       *用于发送宝石列表	
       * </pre>
       */
      public Builder removeList(int index) {
        if (listBuilder_ == null) {
          ensureListIsMutable();
          list_.remove(index);
          onChanged();
        } else {
          listBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .qxmobile.protobuf.JewelInfo list = 3;</code>
       *
       * <pre>
       *用于发送宝石列表	
       * </pre>
       */
      public qxmobile.protobuf.JewelProtos.JewelInfo.Builder getListBuilder(
          int index) {
        return getListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .qxmobile.protobuf.JewelInfo list = 3;</code>
       *
       * <pre>
       *用于发送宝石列表	
       * </pre>
       */
      public qxmobile.protobuf.JewelProtos.JewelInfoOrBuilder getListOrBuilder(
          int index) {
        if (listBuilder_ == null) {
          return list_.get(index);  } else {
          return listBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .qxmobile.protobuf.JewelInfo list = 3;</code>
       *
       * <pre>
       *用于发送宝石列表	
       * </pre>
       */
      public java.util.List<? extends qxmobile.protobuf.JewelProtos.JewelInfoOrBuilder> 
           getListOrBuilderList() {
        if (listBuilder_ != null) {
          return listBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(list_);
        }
      }
      /**
       * <code>repeated .qxmobile.protobuf.JewelInfo list = 3;</code>
       *
       * <pre>
       *用于发送宝石列表	
       * </pre>
       */
      public qxmobile.protobuf.JewelProtos.JewelInfo.Builder addListBuilder() {
        return getListFieldBuilder().addBuilder(
            qxmobile.protobuf.JewelProtos.JewelInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .qxmobile.protobuf.JewelInfo list = 3;</code>
       *
       * <pre>
       *用于发送宝石列表	
       * </pre>
       */
      public qxmobile.protobuf.JewelProtos.JewelInfo.Builder addListBuilder(
          int index) {
        return getListFieldBuilder().addBuilder(
            index, qxmobile.protobuf.JewelProtos.JewelInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .qxmobile.protobuf.JewelInfo list = 3;</code>
       *
       * <pre>
       *用于发送宝石列表	
       * </pre>
       */
      public java.util.List<qxmobile.protobuf.JewelProtos.JewelInfo.Builder> 
           getListBuilderList() {
        return getListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          qxmobile.protobuf.JewelProtos.JewelInfo, qxmobile.protobuf.JewelProtos.JewelInfo.Builder, qxmobile.protobuf.JewelProtos.JewelInfoOrBuilder> 
          getListFieldBuilder() {
        if (listBuilder_ == null) {
          listBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              qxmobile.protobuf.JewelProtos.JewelInfo, qxmobile.protobuf.JewelProtos.JewelInfo.Builder, qxmobile.protobuf.JewelProtos.JewelInfoOrBuilder>(
                  list_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          list_ = null;
        }
        return listBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:qxmobile.protobuf.JewelList)
    }

    static {
      defaultInstance = new JewelList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:qxmobile.protobuf.JewelList)
  }

  public interface EquipOperationReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 type = 1;
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *	type = 1：请求装备上的宝石信息
     *	type = 2：请求一键镶嵌
     *	type = 3：请求一键拆解 
     *	type = 4：请求镶嵌一颗宝石
     *	type = 5：请求拆解一颗宝石
     *	type = 6：请求宝石合成
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *	type = 1：请求装备上的宝石信息
     *	type = 2：请求一键镶嵌
     *	type = 3：请求一键拆解 
     *	type = 4：请求镶嵌一颗宝石
     *	type = 5：请求拆解一颗宝石
     *	type = 6：请求宝石合成
     * </pre>
     */
    int getType();

    // required int64 equlpId = 2;
    /**
     * <code>required int64 equlpId = 2;</code>
     *
     * <pre>
     *所请求的装备dbid
     * </pre>
     */
    boolean hasEqulpId();
    /**
     * <code>required int64 equlpId = 2;</code>
     *
     * <pre>
     *所请求的装备dbid
     * </pre>
     */
    long getEqulpId();

    // optional int64 jewelId = 3;
    /**
     * <code>optional int64 jewelId = 3;</code>
     *
     * <pre>
     *所请求的宝石dbid，请求镶嵌时需要发送
     * </pre>
     */
    boolean hasJewelId();
    /**
     * <code>optional int64 jewelId = 3;</code>
     *
     * <pre>
     *所请求的宝石dbid，请求镶嵌时需要发送
     * </pre>
     */
    long getJewelId();

    // optional int32 possionId = 4;
    /**
     * <code>optional int32 possionId = 4;</code>
     *
     * <pre>
     *所请求的宝石孔的id，请求镶嵌、拆下、合成时需要发送
     * </pre>
     */
    boolean hasPossionId();
    /**
     * <code>optional int32 possionId = 4;</code>
     *
     * <pre>
     *所请求的宝石孔的id，请求镶嵌、拆下、合成时需要发送
     * </pre>
     */
    int getPossionId();

    // repeated int64 cailiaoList = 5;
    /**
     * <code>repeated int64 cailiaoList = 5;</code>
     *
     * <pre>
     *所请求的材料列表，宝石合成的时候发送
     * </pre>
     */
    java.util.List<java.lang.Long> getCailiaoListList();
    /**
     * <code>repeated int64 cailiaoList = 5;</code>
     *
     * <pre>
     *所请求的材料列表，宝石合成的时候发送
     * </pre>
     */
    int getCailiaoListCount();
    /**
     * <code>repeated int64 cailiaoList = 5;</code>
     *
     * <pre>
     *所请求的材料列表，宝石合成的时候发送
     * </pre>
     */
    long getCailiaoList(int index);
  }
  /**
   * Protobuf type {@code qxmobile.protobuf.EquipOperationReq}
   *
   * <pre>
   *c-&gt;s 客户端向服务器请求对装备的各种操作，由type区分
   * </pre>
   */
  public static final class EquipOperationReq extends
      com.google.protobuf.GeneratedMessage
      implements EquipOperationReqOrBuilder {
    // Use EquipOperationReq.newBuilder() to construct.
    private EquipOperationReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EquipOperationReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EquipOperationReq defaultInstance;
    public static EquipOperationReq getDefaultInstance() {
      return defaultInstance;
    }

    public EquipOperationReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EquipOperationReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              equlpId_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              jewelId_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              possionId_ = input.readInt32();
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                cailiaoList_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000010;
              }
              cailiaoList_.add(input.readInt64());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                cailiaoList_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                cailiaoList_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          cailiaoList_ = java.util.Collections.unmodifiableList(cailiaoList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return qxmobile.protobuf.JewelProtos.internal_static_qxmobile_protobuf_EquipOperationReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return qxmobile.protobuf.JewelProtos.internal_static_qxmobile_protobuf_EquipOperationReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              qxmobile.protobuf.JewelProtos.EquipOperationReq.class, qxmobile.protobuf.JewelProtos.EquipOperationReq.Builder.class);
    }

    public static com.google.protobuf.Parser<EquipOperationReq> PARSER =
        new com.google.protobuf.AbstractParser<EquipOperationReq>() {
      public EquipOperationReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EquipOperationReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EquipOperationReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *	type = 1：请求装备上的宝石信息
     *	type = 2：请求一键镶嵌
     *	type = 3：请求一键拆解 
     *	type = 4：请求镶嵌一颗宝石
     *	type = 5：请求拆解一颗宝石
     *	type = 6：请求宝石合成
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *	type = 1：请求装备上的宝石信息
     *	type = 2：请求一键镶嵌
     *	type = 3：请求一键拆解 
     *	type = 4：请求镶嵌一颗宝石
     *	type = 5：请求拆解一颗宝石
     *	type = 6：请求宝石合成
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // required int64 equlpId = 2;
    public static final int EQULPID_FIELD_NUMBER = 2;
    private long equlpId_;
    /**
     * <code>required int64 equlpId = 2;</code>
     *
     * <pre>
     *所请求的装备dbid
     * </pre>
     */
    public boolean hasEqulpId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 equlpId = 2;</code>
     *
     * <pre>
     *所请求的装备dbid
     * </pre>
     */
    public long getEqulpId() {
      return equlpId_;
    }

    // optional int64 jewelId = 3;
    public static final int JEWELID_FIELD_NUMBER = 3;
    private long jewelId_;
    /**
     * <code>optional int64 jewelId = 3;</code>
     *
     * <pre>
     *所请求的宝石dbid，请求镶嵌时需要发送
     * </pre>
     */
    public boolean hasJewelId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 jewelId = 3;</code>
     *
     * <pre>
     *所请求的宝石dbid，请求镶嵌时需要发送
     * </pre>
     */
    public long getJewelId() {
      return jewelId_;
    }

    // optional int32 possionId = 4;
    public static final int POSSIONID_FIELD_NUMBER = 4;
    private int possionId_;
    /**
     * <code>optional int32 possionId = 4;</code>
     *
     * <pre>
     *所请求的宝石孔的id，请求镶嵌、拆下、合成时需要发送
     * </pre>
     */
    public boolean hasPossionId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 possionId = 4;</code>
     *
     * <pre>
     *所请求的宝石孔的id，请求镶嵌、拆下、合成时需要发送
     * </pre>
     */
    public int getPossionId() {
      return possionId_;
    }

    // repeated int64 cailiaoList = 5;
    public static final int CAILIAOLIST_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Long> cailiaoList_;
    /**
     * <code>repeated int64 cailiaoList = 5;</code>
     *
     * <pre>
     *所请求的材料列表，宝石合成的时候发送
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getCailiaoListList() {
      return cailiaoList_;
    }
    /**
     * <code>repeated int64 cailiaoList = 5;</code>
     *
     * <pre>
     *所请求的材料列表，宝石合成的时候发送
     * </pre>
     */
    public int getCailiaoListCount() {
      return cailiaoList_.size();
    }
    /**
     * <code>repeated int64 cailiaoList = 5;</code>
     *
     * <pre>
     *所请求的材料列表，宝石合成的时候发送
     * </pre>
     */
    public long getCailiaoList(int index) {
      return cailiaoList_.get(index);
    }

    private void initFields() {
      type_ = 0;
      equlpId_ = 0L;
      jewelId_ = 0L;
      possionId_ = 0;
      cailiaoList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEqulpId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, equlpId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, jewelId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, possionId_);
      }
      for (int i = 0; i < cailiaoList_.size(); i++) {
        output.writeInt64(5, cailiaoList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, equlpId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, jewelId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, possionId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cailiaoList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(cailiaoList_.get(i));
        }
        size += dataSize;
        size += 1 * getCailiaoListList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static qxmobile.protobuf.JewelProtos.EquipOperationReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static qxmobile.protobuf.JewelProtos.EquipOperationReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static qxmobile.protobuf.JewelProtos.EquipOperationReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static qxmobile.protobuf.JewelProtos.EquipOperationReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static qxmobile.protobuf.JewelProtos.EquipOperationReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static qxmobile.protobuf.JewelProtos.EquipOperationReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static qxmobile.protobuf.JewelProtos.EquipOperationReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static qxmobile.protobuf.JewelProtos.EquipOperationReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static qxmobile.protobuf.JewelProtos.EquipOperationReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static qxmobile.protobuf.JewelProtos.EquipOperationReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(qxmobile.protobuf.JewelProtos.EquipOperationReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code qxmobile.protobuf.EquipOperationReq}
     *
     * <pre>
     *c-&gt;s 客户端向服务器请求对装备的各种操作，由type区分
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements qxmobile.protobuf.JewelProtos.EquipOperationReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return qxmobile.protobuf.JewelProtos.internal_static_qxmobile_protobuf_EquipOperationReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return qxmobile.protobuf.JewelProtos.internal_static_qxmobile_protobuf_EquipOperationReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                qxmobile.protobuf.JewelProtos.EquipOperationReq.class, qxmobile.protobuf.JewelProtos.EquipOperationReq.Builder.class);
      }

      // Construct using qxmobile.protobuf.JewelProtos.EquipOperationReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        equlpId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        jewelId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        possionId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        cailiaoList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return qxmobile.protobuf.JewelProtos.internal_static_qxmobile_protobuf_EquipOperationReq_descriptor;
      }

      public qxmobile.protobuf.JewelProtos.EquipOperationReq getDefaultInstanceForType() {
        return qxmobile.protobuf.JewelProtos.EquipOperationReq.getDefaultInstance();
      }

      public qxmobile.protobuf.JewelProtos.EquipOperationReq build() {
        qxmobile.protobuf.JewelProtos.EquipOperationReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public qxmobile.protobuf.JewelProtos.EquipOperationReq buildPartial() {
        qxmobile.protobuf.JewelProtos.EquipOperationReq result = new qxmobile.protobuf.JewelProtos.EquipOperationReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.equlpId_ = equlpId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.jewelId_ = jewelId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.possionId_ = possionId_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          cailiaoList_ = java.util.Collections.unmodifiableList(cailiaoList_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.cailiaoList_ = cailiaoList_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof qxmobile.protobuf.JewelProtos.EquipOperationReq) {
          return mergeFrom((qxmobile.protobuf.JewelProtos.EquipOperationReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(qxmobile.protobuf.JewelProtos.EquipOperationReq other) {
        if (other == qxmobile.protobuf.JewelProtos.EquipOperationReq.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasEqulpId()) {
          setEqulpId(other.getEqulpId());
        }
        if (other.hasJewelId()) {
          setJewelId(other.getJewelId());
        }
        if (other.hasPossionId()) {
          setPossionId(other.getPossionId());
        }
        if (!other.cailiaoList_.isEmpty()) {
          if (cailiaoList_.isEmpty()) {
            cailiaoList_ = other.cailiaoList_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureCailiaoListIsMutable();
            cailiaoList_.addAll(other.cailiaoList_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (!hasEqulpId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        qxmobile.protobuf.JewelProtos.EquipOperationReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (qxmobile.protobuf.JewelProtos.EquipOperationReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 type = 1;
      private int type_ ;
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *	type = 1：请求装备上的宝石信息
       *	type = 2：请求一键镶嵌
       *	type = 3：请求一键拆解 
       *	type = 4：请求镶嵌一颗宝石
       *	type = 5：请求拆解一颗宝石
       *	type = 6：请求宝石合成
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *	type = 1：请求装备上的宝石信息
       *	type = 2：请求一键镶嵌
       *	type = 3：请求一键拆解 
       *	type = 4：请求镶嵌一颗宝石
       *	type = 5：请求拆解一颗宝石
       *	type = 6：请求宝石合成
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *	type = 1：请求装备上的宝石信息
       *	type = 2：请求一键镶嵌
       *	type = 3：请求一键拆解 
       *	type = 4：请求镶嵌一颗宝石
       *	type = 5：请求拆解一颗宝石
       *	type = 6：请求宝石合成
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *	type = 1：请求装备上的宝石信息
       *	type = 2：请求一键镶嵌
       *	type = 3：请求一键拆解 
       *	type = 4：请求镶嵌一颗宝石
       *	type = 5：请求拆解一颗宝石
       *	type = 6：请求宝石合成
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      // required int64 equlpId = 2;
      private long equlpId_ ;
      /**
       * <code>required int64 equlpId = 2;</code>
       *
       * <pre>
       *所请求的装备dbid
       * </pre>
       */
      public boolean hasEqulpId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 equlpId = 2;</code>
       *
       * <pre>
       *所请求的装备dbid
       * </pre>
       */
      public long getEqulpId() {
        return equlpId_;
      }
      /**
       * <code>required int64 equlpId = 2;</code>
       *
       * <pre>
       *所请求的装备dbid
       * </pre>
       */
      public Builder setEqulpId(long value) {
        bitField0_ |= 0x00000002;
        equlpId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 equlpId = 2;</code>
       *
       * <pre>
       *所请求的装备dbid
       * </pre>
       */
      public Builder clearEqulpId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        equlpId_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 jewelId = 3;
      private long jewelId_ ;
      /**
       * <code>optional int64 jewelId = 3;</code>
       *
       * <pre>
       *所请求的宝石dbid，请求镶嵌时需要发送
       * </pre>
       */
      public boolean hasJewelId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 jewelId = 3;</code>
       *
       * <pre>
       *所请求的宝石dbid，请求镶嵌时需要发送
       * </pre>
       */
      public long getJewelId() {
        return jewelId_;
      }
      /**
       * <code>optional int64 jewelId = 3;</code>
       *
       * <pre>
       *所请求的宝石dbid，请求镶嵌时需要发送
       * </pre>
       */
      public Builder setJewelId(long value) {
        bitField0_ |= 0x00000004;
        jewelId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 jewelId = 3;</code>
       *
       * <pre>
       *所请求的宝石dbid，请求镶嵌时需要发送
       * </pre>
       */
      public Builder clearJewelId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        jewelId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 possionId = 4;
      private int possionId_ ;
      /**
       * <code>optional int32 possionId = 4;</code>
       *
       * <pre>
       *所请求的宝石孔的id，请求镶嵌、拆下、合成时需要发送
       * </pre>
       */
      public boolean hasPossionId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 possionId = 4;</code>
       *
       * <pre>
       *所请求的宝石孔的id，请求镶嵌、拆下、合成时需要发送
       * </pre>
       */
      public int getPossionId() {
        return possionId_;
      }
      /**
       * <code>optional int32 possionId = 4;</code>
       *
       * <pre>
       *所请求的宝石孔的id，请求镶嵌、拆下、合成时需要发送
       * </pre>
       */
      public Builder setPossionId(int value) {
        bitField0_ |= 0x00000008;
        possionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 possionId = 4;</code>
       *
       * <pre>
       *所请求的宝石孔的id，请求镶嵌、拆下、合成时需要发送
       * </pre>
       */
      public Builder clearPossionId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        possionId_ = 0;
        onChanged();
        return this;
      }

      // repeated int64 cailiaoList = 5;
      private java.util.List<java.lang.Long> cailiaoList_ = java.util.Collections.emptyList();
      private void ensureCailiaoListIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          cailiaoList_ = new java.util.ArrayList<java.lang.Long>(cailiaoList_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int64 cailiaoList = 5;</code>
       *
       * <pre>
       *所请求的材料列表，宝石合成的时候发送
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getCailiaoListList() {
        return java.util.Collections.unmodifiableList(cailiaoList_);
      }
      /**
       * <code>repeated int64 cailiaoList = 5;</code>
       *
       * <pre>
       *所请求的材料列表，宝石合成的时候发送
       * </pre>
       */
      public int getCailiaoListCount() {
        return cailiaoList_.size();
      }
      /**
       * <code>repeated int64 cailiaoList = 5;</code>
       *
       * <pre>
       *所请求的材料列表，宝石合成的时候发送
       * </pre>
       */
      public long getCailiaoList(int index) {
        return cailiaoList_.get(index);
      }
      /**
       * <code>repeated int64 cailiaoList = 5;</code>
       *
       * <pre>
       *所请求的材料列表，宝石合成的时候发送
       * </pre>
       */
      public Builder setCailiaoList(
          int index, long value) {
        ensureCailiaoListIsMutable();
        cailiaoList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 cailiaoList = 5;</code>
       *
       * <pre>
       *所请求的材料列表，宝石合成的时候发送
       * </pre>
       */
      public Builder addCailiaoList(long value) {
        ensureCailiaoListIsMutable();
        cailiaoList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 cailiaoList = 5;</code>
       *
       * <pre>
       *所请求的材料列表，宝石合成的时候发送
       * </pre>
       */
      public Builder addAllCailiaoList(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureCailiaoListIsMutable();
        super.addAll(values, cailiaoList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 cailiaoList = 5;</code>
       *
       * <pre>
       *所请求的材料列表，宝石合成的时候发送
       * </pre>
       */
      public Builder clearCailiaoList() {
        cailiaoList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:qxmobile.protobuf.EquipOperationReq)
    }

    static {
      defaultInstance = new EquipOperationReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:qxmobile.protobuf.EquipOperationReq)
  }

  public interface EquipOperationRespOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 type = 1;
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *	type = 1：请求装备上的宝石信息
     *	type = 2：请求一键镶嵌
     *	type = 3：请求一键拆解 
     *	type = 4：请求镶嵌一颗宝石
     *	type = 5：请求拆解一颗宝石
     *	type = 6：请求宝石合成
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *	type = 1：请求装备上的宝石信息
     *	type = 2：请求一键镶嵌
     *	type = 3：请求一键拆解 
     *	type = 4：请求镶嵌一颗宝石
     *	type = 5：请求拆解一颗宝石
     *	type = 6：请求宝石合成
     * </pre>
     */
    int getType();

    // optional .qxmobile.protobuf.JewelInfo OneJewel = 2;
    /**
     * <code>optional .qxmobile.protobuf.JewelInfo OneJewel = 2;</code>
     *
     * <pre>
     *单独一颗宝石信息
     * </pre>
     */
    boolean hasOneJewel();
    /**
     * <code>optional .qxmobile.protobuf.JewelInfo OneJewel = 2;</code>
     *
     * <pre>
     *单独一颗宝石信息
     * </pre>
     */
    qxmobile.protobuf.JewelProtos.JewelInfo getOneJewel();
    /**
     * <code>optional .qxmobile.protobuf.JewelInfo OneJewel = 2;</code>
     *
     * <pre>
     *单独一颗宝石信息
     * </pre>
     */
    qxmobile.protobuf.JewelProtos.JewelInfoOrBuilder getOneJewelOrBuilder();

    // optional .qxmobile.protobuf.JewelList JewelList = 3;
    /**
     * <code>optional .qxmobile.protobuf.JewelList JewelList = 3;</code>
     *
     * <pre>
     *一件装备上的宝石信息
     * </pre>
     */
    boolean hasJewelList();
    /**
     * <code>optional .qxmobile.protobuf.JewelList JewelList = 3;</code>
     *
     * <pre>
     *一件装备上的宝石信息
     * </pre>
     */
    qxmobile.protobuf.JewelProtos.JewelList getJewelList();
    /**
     * <code>optional .qxmobile.protobuf.JewelList JewelList = 3;</code>
     *
     * <pre>
     *一件装备上的宝石信息
     * </pre>
     */
    qxmobile.protobuf.JewelProtos.JewelListOrBuilder getJewelListOrBuilder();

    // optional bool Succes = 4;
    /**
     * <code>optional bool Succes = 4;</code>
     *
     * <pre>
     *某些操作是否成功
     * </pre>
     */
    boolean hasSucces();
    /**
     * <code>optional bool Succes = 4;</code>
     *
     * <pre>
     *某些操作是否成功
     * </pre>
     */
    boolean getSucces();

    // repeated int64 RedPoint = 5;
    /**
     * <code>repeated int64 RedPoint = 5;</code>
     *
     * <pre>
     *用于发送红点推送信息
     * </pre>
     */
    java.util.List<java.lang.Long> getRedPointList();
    /**
     * <code>repeated int64 RedPoint = 5;</code>
     *
     * <pre>
     *用于发送红点推送信息
     * </pre>
     */
    int getRedPointCount();
    /**
     * <code>repeated int64 RedPoint = 5;</code>
     *
     * <pre>
     *用于发送红点推送信息
     * </pre>
     */
    long getRedPoint(int index);
  }
  /**
   * Protobuf type {@code qxmobile.protobuf.EquipOperationResp}
   *
   * <pre>
   *s-&gt;c 服务器向客户端返回宝石相关的各种内容,各种返回请求整合进一个协议中
   * </pre>
   */
  public static final class EquipOperationResp extends
      com.google.protobuf.GeneratedMessage
      implements EquipOperationRespOrBuilder {
    // Use EquipOperationResp.newBuilder() to construct.
    private EquipOperationResp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EquipOperationResp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EquipOperationResp defaultInstance;
    public static EquipOperationResp getDefaultInstance() {
      return defaultInstance;
    }

    public EquipOperationResp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EquipOperationResp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
            case 18: {
              qxmobile.protobuf.JewelProtos.JewelInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = oneJewel_.toBuilder();
              }
              oneJewel_ = input.readMessage(qxmobile.protobuf.JewelProtos.JewelInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(oneJewel_);
                oneJewel_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              qxmobile.protobuf.JewelProtos.JewelList.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = jewelList_.toBuilder();
              }
              jewelList_ = input.readMessage(qxmobile.protobuf.JewelProtos.JewelList.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(jewelList_);
                jewelList_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              succes_ = input.readBool();
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                redPoint_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000010;
              }
              redPoint_.add(input.readInt64());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                redPoint_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                redPoint_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          redPoint_ = java.util.Collections.unmodifiableList(redPoint_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return qxmobile.protobuf.JewelProtos.internal_static_qxmobile_protobuf_EquipOperationResp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return qxmobile.protobuf.JewelProtos.internal_static_qxmobile_protobuf_EquipOperationResp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              qxmobile.protobuf.JewelProtos.EquipOperationResp.class, qxmobile.protobuf.JewelProtos.EquipOperationResp.Builder.class);
    }

    public static com.google.protobuf.Parser<EquipOperationResp> PARSER =
        new com.google.protobuf.AbstractParser<EquipOperationResp>() {
      public EquipOperationResp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EquipOperationResp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EquipOperationResp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *	type = 1：请求装备上的宝石信息
     *	type = 2：请求一键镶嵌
     *	type = 3：请求一键拆解 
     *	type = 4：请求镶嵌一颗宝石
     *	type = 5：请求拆解一颗宝石
     *	type = 6：请求宝石合成
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *	type = 1：请求装备上的宝石信息
     *	type = 2：请求一键镶嵌
     *	type = 3：请求一键拆解 
     *	type = 4：请求镶嵌一颗宝石
     *	type = 5：请求拆解一颗宝石
     *	type = 6：请求宝石合成
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // optional .qxmobile.protobuf.JewelInfo OneJewel = 2;
    public static final int ONEJEWEL_FIELD_NUMBER = 2;
    private qxmobile.protobuf.JewelProtos.JewelInfo oneJewel_;
    /**
     * <code>optional .qxmobile.protobuf.JewelInfo OneJewel = 2;</code>
     *
     * <pre>
     *单独一颗宝石信息
     * </pre>
     */
    public boolean hasOneJewel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .qxmobile.protobuf.JewelInfo OneJewel = 2;</code>
     *
     * <pre>
     *单独一颗宝石信息
     * </pre>
     */
    public qxmobile.protobuf.JewelProtos.JewelInfo getOneJewel() {
      return oneJewel_;
    }
    /**
     * <code>optional .qxmobile.protobuf.JewelInfo OneJewel = 2;</code>
     *
     * <pre>
     *单独一颗宝石信息
     * </pre>
     */
    public qxmobile.protobuf.JewelProtos.JewelInfoOrBuilder getOneJewelOrBuilder() {
      return oneJewel_;
    }

    // optional .qxmobile.protobuf.JewelList JewelList = 3;
    public static final int JEWELLIST_FIELD_NUMBER = 3;
    private qxmobile.protobuf.JewelProtos.JewelList jewelList_;
    /**
     * <code>optional .qxmobile.protobuf.JewelList JewelList = 3;</code>
     *
     * <pre>
     *一件装备上的宝石信息
     * </pre>
     */
    public boolean hasJewelList() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .qxmobile.protobuf.JewelList JewelList = 3;</code>
     *
     * <pre>
     *一件装备上的宝石信息
     * </pre>
     */
    public qxmobile.protobuf.JewelProtos.JewelList getJewelList() {
      return jewelList_;
    }
    /**
     * <code>optional .qxmobile.protobuf.JewelList JewelList = 3;</code>
     *
     * <pre>
     *一件装备上的宝石信息
     * </pre>
     */
    public qxmobile.protobuf.JewelProtos.JewelListOrBuilder getJewelListOrBuilder() {
      return jewelList_;
    }

    // optional bool Succes = 4;
    public static final int SUCCES_FIELD_NUMBER = 4;
    private boolean succes_;
    /**
     * <code>optional bool Succes = 4;</code>
     *
     * <pre>
     *某些操作是否成功
     * </pre>
     */
    public boolean hasSucces() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool Succes = 4;</code>
     *
     * <pre>
     *某些操作是否成功
     * </pre>
     */
    public boolean getSucces() {
      return succes_;
    }

    // repeated int64 RedPoint = 5;
    public static final int REDPOINT_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Long> redPoint_;
    /**
     * <code>repeated int64 RedPoint = 5;</code>
     *
     * <pre>
     *用于发送红点推送信息
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getRedPointList() {
      return redPoint_;
    }
    /**
     * <code>repeated int64 RedPoint = 5;</code>
     *
     * <pre>
     *用于发送红点推送信息
     * </pre>
     */
    public int getRedPointCount() {
      return redPoint_.size();
    }
    /**
     * <code>repeated int64 RedPoint = 5;</code>
     *
     * <pre>
     *用于发送红点推送信息
     * </pre>
     */
    public long getRedPoint(int index) {
      return redPoint_.get(index);
    }

    private void initFields() {
      type_ = 0;
      oneJewel_ = qxmobile.protobuf.JewelProtos.JewelInfo.getDefaultInstance();
      jewelList_ = qxmobile.protobuf.JewelProtos.JewelList.getDefaultInstance();
      succes_ = false;
      redPoint_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasOneJewel()) {
        if (!getOneJewel().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasJewelList()) {
        if (!getJewelList().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, oneJewel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, jewelList_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, succes_);
      }
      for (int i = 0; i < redPoint_.size(); i++) {
        output.writeInt64(5, redPoint_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, oneJewel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, jewelList_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, succes_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < redPoint_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(redPoint_.get(i));
        }
        size += dataSize;
        size += 1 * getRedPointList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static qxmobile.protobuf.JewelProtos.EquipOperationResp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static qxmobile.protobuf.JewelProtos.EquipOperationResp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static qxmobile.protobuf.JewelProtos.EquipOperationResp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static qxmobile.protobuf.JewelProtos.EquipOperationResp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static qxmobile.protobuf.JewelProtos.EquipOperationResp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static qxmobile.protobuf.JewelProtos.EquipOperationResp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static qxmobile.protobuf.JewelProtos.EquipOperationResp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static qxmobile.protobuf.JewelProtos.EquipOperationResp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static qxmobile.protobuf.JewelProtos.EquipOperationResp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static qxmobile.protobuf.JewelProtos.EquipOperationResp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(qxmobile.protobuf.JewelProtos.EquipOperationResp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code qxmobile.protobuf.EquipOperationResp}
     *
     * <pre>
     *s-&gt;c 服务器向客户端返回宝石相关的各种内容,各种返回请求整合进一个协议中
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements qxmobile.protobuf.JewelProtos.EquipOperationRespOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return qxmobile.protobuf.JewelProtos.internal_static_qxmobile_protobuf_EquipOperationResp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return qxmobile.protobuf.JewelProtos.internal_static_qxmobile_protobuf_EquipOperationResp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                qxmobile.protobuf.JewelProtos.EquipOperationResp.class, qxmobile.protobuf.JewelProtos.EquipOperationResp.Builder.class);
      }

      // Construct using qxmobile.protobuf.JewelProtos.EquipOperationResp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getOneJewelFieldBuilder();
          getJewelListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (oneJewelBuilder_ == null) {
          oneJewel_ = qxmobile.protobuf.JewelProtos.JewelInfo.getDefaultInstance();
        } else {
          oneJewelBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (jewelListBuilder_ == null) {
          jewelList_ = qxmobile.protobuf.JewelProtos.JewelList.getDefaultInstance();
        } else {
          jewelListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        succes_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        redPoint_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return qxmobile.protobuf.JewelProtos.internal_static_qxmobile_protobuf_EquipOperationResp_descriptor;
      }

      public qxmobile.protobuf.JewelProtos.EquipOperationResp getDefaultInstanceForType() {
        return qxmobile.protobuf.JewelProtos.EquipOperationResp.getDefaultInstance();
      }

      public qxmobile.protobuf.JewelProtos.EquipOperationResp build() {
        qxmobile.protobuf.JewelProtos.EquipOperationResp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public qxmobile.protobuf.JewelProtos.EquipOperationResp buildPartial() {
        qxmobile.protobuf.JewelProtos.EquipOperationResp result = new qxmobile.protobuf.JewelProtos.EquipOperationResp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (oneJewelBuilder_ == null) {
          result.oneJewel_ = oneJewel_;
        } else {
          result.oneJewel_ = oneJewelBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (jewelListBuilder_ == null) {
          result.jewelList_ = jewelList_;
        } else {
          result.jewelList_ = jewelListBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.succes_ = succes_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          redPoint_ = java.util.Collections.unmodifiableList(redPoint_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.redPoint_ = redPoint_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof qxmobile.protobuf.JewelProtos.EquipOperationResp) {
          return mergeFrom((qxmobile.protobuf.JewelProtos.EquipOperationResp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(qxmobile.protobuf.JewelProtos.EquipOperationResp other) {
        if (other == qxmobile.protobuf.JewelProtos.EquipOperationResp.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasOneJewel()) {
          mergeOneJewel(other.getOneJewel());
        }
        if (other.hasJewelList()) {
          mergeJewelList(other.getJewelList());
        }
        if (other.hasSucces()) {
          setSucces(other.getSucces());
        }
        if (!other.redPoint_.isEmpty()) {
          if (redPoint_.isEmpty()) {
            redPoint_ = other.redPoint_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureRedPointIsMutable();
            redPoint_.addAll(other.redPoint_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (hasOneJewel()) {
          if (!getOneJewel().isInitialized()) {
            
            return false;
          }
        }
        if (hasJewelList()) {
          if (!getJewelList().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        qxmobile.protobuf.JewelProtos.EquipOperationResp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (qxmobile.protobuf.JewelProtos.EquipOperationResp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 type = 1;
      private int type_ ;
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *	type = 1：请求装备上的宝石信息
       *	type = 2：请求一键镶嵌
       *	type = 3：请求一键拆解 
       *	type = 4：请求镶嵌一颗宝石
       *	type = 5：请求拆解一颗宝石
       *	type = 6：请求宝石合成
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *	type = 1：请求装备上的宝石信息
       *	type = 2：请求一键镶嵌
       *	type = 3：请求一键拆解 
       *	type = 4：请求镶嵌一颗宝石
       *	type = 5：请求拆解一颗宝石
       *	type = 6：请求宝石合成
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *	type = 1：请求装备上的宝石信息
       *	type = 2：请求一键镶嵌
       *	type = 3：请求一键拆解 
       *	type = 4：请求镶嵌一颗宝石
       *	type = 5：请求拆解一颗宝石
       *	type = 6：请求宝石合成
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *	type = 1：请求装备上的宝石信息
       *	type = 2：请求一键镶嵌
       *	type = 3：请求一键拆解 
       *	type = 4：请求镶嵌一颗宝石
       *	type = 5：请求拆解一颗宝石
       *	type = 6：请求宝石合成
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      // optional .qxmobile.protobuf.JewelInfo OneJewel = 2;
      private qxmobile.protobuf.JewelProtos.JewelInfo oneJewel_ = qxmobile.protobuf.JewelProtos.JewelInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          qxmobile.protobuf.JewelProtos.JewelInfo, qxmobile.protobuf.JewelProtos.JewelInfo.Builder, qxmobile.protobuf.JewelProtos.JewelInfoOrBuilder> oneJewelBuilder_;
      /**
       * <code>optional .qxmobile.protobuf.JewelInfo OneJewel = 2;</code>
       *
       * <pre>
       *单独一颗宝石信息
       * </pre>
       */
      public boolean hasOneJewel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .qxmobile.protobuf.JewelInfo OneJewel = 2;</code>
       *
       * <pre>
       *单独一颗宝石信息
       * </pre>
       */
      public qxmobile.protobuf.JewelProtos.JewelInfo getOneJewel() {
        if (oneJewelBuilder_ == null) {
          return oneJewel_;
        } else {
          return oneJewelBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .qxmobile.protobuf.JewelInfo OneJewel = 2;</code>
       *
       * <pre>
       *单独一颗宝石信息
       * </pre>
       */
      public Builder setOneJewel(qxmobile.protobuf.JewelProtos.JewelInfo value) {
        if (oneJewelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          oneJewel_ = value;
          onChanged();
        } else {
          oneJewelBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .qxmobile.protobuf.JewelInfo OneJewel = 2;</code>
       *
       * <pre>
       *单独一颗宝石信息
       * </pre>
       */
      public Builder setOneJewel(
          qxmobile.protobuf.JewelProtos.JewelInfo.Builder builderForValue) {
        if (oneJewelBuilder_ == null) {
          oneJewel_ = builderForValue.build();
          onChanged();
        } else {
          oneJewelBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .qxmobile.protobuf.JewelInfo OneJewel = 2;</code>
       *
       * <pre>
       *单独一颗宝石信息
       * </pre>
       */
      public Builder mergeOneJewel(qxmobile.protobuf.JewelProtos.JewelInfo value) {
        if (oneJewelBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              oneJewel_ != qxmobile.protobuf.JewelProtos.JewelInfo.getDefaultInstance()) {
            oneJewel_ =
              qxmobile.protobuf.JewelProtos.JewelInfo.newBuilder(oneJewel_).mergeFrom(value).buildPartial();
          } else {
            oneJewel_ = value;
          }
          onChanged();
        } else {
          oneJewelBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .qxmobile.protobuf.JewelInfo OneJewel = 2;</code>
       *
       * <pre>
       *单独一颗宝石信息
       * </pre>
       */
      public Builder clearOneJewel() {
        if (oneJewelBuilder_ == null) {
          oneJewel_ = qxmobile.protobuf.JewelProtos.JewelInfo.getDefaultInstance();
          onChanged();
        } else {
          oneJewelBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .qxmobile.protobuf.JewelInfo OneJewel = 2;</code>
       *
       * <pre>
       *单独一颗宝石信息
       * </pre>
       */
      public qxmobile.protobuf.JewelProtos.JewelInfo.Builder getOneJewelBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getOneJewelFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .qxmobile.protobuf.JewelInfo OneJewel = 2;</code>
       *
       * <pre>
       *单独一颗宝石信息
       * </pre>
       */
      public qxmobile.protobuf.JewelProtos.JewelInfoOrBuilder getOneJewelOrBuilder() {
        if (oneJewelBuilder_ != null) {
          return oneJewelBuilder_.getMessageOrBuilder();
        } else {
          return oneJewel_;
        }
      }
      /**
       * <code>optional .qxmobile.protobuf.JewelInfo OneJewel = 2;</code>
       *
       * <pre>
       *单独一颗宝石信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          qxmobile.protobuf.JewelProtos.JewelInfo, qxmobile.protobuf.JewelProtos.JewelInfo.Builder, qxmobile.protobuf.JewelProtos.JewelInfoOrBuilder> 
          getOneJewelFieldBuilder() {
        if (oneJewelBuilder_ == null) {
          oneJewelBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              qxmobile.protobuf.JewelProtos.JewelInfo, qxmobile.protobuf.JewelProtos.JewelInfo.Builder, qxmobile.protobuf.JewelProtos.JewelInfoOrBuilder>(
                  oneJewel_,
                  getParentForChildren(),
                  isClean());
          oneJewel_ = null;
        }
        return oneJewelBuilder_;
      }

      // optional .qxmobile.protobuf.JewelList JewelList = 3;
      private qxmobile.protobuf.JewelProtos.JewelList jewelList_ = qxmobile.protobuf.JewelProtos.JewelList.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          qxmobile.protobuf.JewelProtos.JewelList, qxmobile.protobuf.JewelProtos.JewelList.Builder, qxmobile.protobuf.JewelProtos.JewelListOrBuilder> jewelListBuilder_;
      /**
       * <code>optional .qxmobile.protobuf.JewelList JewelList = 3;</code>
       *
       * <pre>
       *一件装备上的宝石信息
       * </pre>
       */
      public boolean hasJewelList() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .qxmobile.protobuf.JewelList JewelList = 3;</code>
       *
       * <pre>
       *一件装备上的宝石信息
       * </pre>
       */
      public qxmobile.protobuf.JewelProtos.JewelList getJewelList() {
        if (jewelListBuilder_ == null) {
          return jewelList_;
        } else {
          return jewelListBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .qxmobile.protobuf.JewelList JewelList = 3;</code>
       *
       * <pre>
       *一件装备上的宝石信息
       * </pre>
       */
      public Builder setJewelList(qxmobile.protobuf.JewelProtos.JewelList value) {
        if (jewelListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          jewelList_ = value;
          onChanged();
        } else {
          jewelListBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .qxmobile.protobuf.JewelList JewelList = 3;</code>
       *
       * <pre>
       *一件装备上的宝石信息
       * </pre>
       */
      public Builder setJewelList(
          qxmobile.protobuf.JewelProtos.JewelList.Builder builderForValue) {
        if (jewelListBuilder_ == null) {
          jewelList_ = builderForValue.build();
          onChanged();
        } else {
          jewelListBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .qxmobile.protobuf.JewelList JewelList = 3;</code>
       *
       * <pre>
       *一件装备上的宝石信息
       * </pre>
       */
      public Builder mergeJewelList(qxmobile.protobuf.JewelProtos.JewelList value) {
        if (jewelListBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              jewelList_ != qxmobile.protobuf.JewelProtos.JewelList.getDefaultInstance()) {
            jewelList_ =
              qxmobile.protobuf.JewelProtos.JewelList.newBuilder(jewelList_).mergeFrom(value).buildPartial();
          } else {
            jewelList_ = value;
          }
          onChanged();
        } else {
          jewelListBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .qxmobile.protobuf.JewelList JewelList = 3;</code>
       *
       * <pre>
       *一件装备上的宝石信息
       * </pre>
       */
      public Builder clearJewelList() {
        if (jewelListBuilder_ == null) {
          jewelList_ = qxmobile.protobuf.JewelProtos.JewelList.getDefaultInstance();
          onChanged();
        } else {
          jewelListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .qxmobile.protobuf.JewelList JewelList = 3;</code>
       *
       * <pre>
       *一件装备上的宝石信息
       * </pre>
       */
      public qxmobile.protobuf.JewelProtos.JewelList.Builder getJewelListBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getJewelListFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .qxmobile.protobuf.JewelList JewelList = 3;</code>
       *
       * <pre>
       *一件装备上的宝石信息
       * </pre>
       */
      public qxmobile.protobuf.JewelProtos.JewelListOrBuilder getJewelListOrBuilder() {
        if (jewelListBuilder_ != null) {
          return jewelListBuilder_.getMessageOrBuilder();
        } else {
          return jewelList_;
        }
      }
      /**
       * <code>optional .qxmobile.protobuf.JewelList JewelList = 3;</code>
       *
       * <pre>
       *一件装备上的宝石信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          qxmobile.protobuf.JewelProtos.JewelList, qxmobile.protobuf.JewelProtos.JewelList.Builder, qxmobile.protobuf.JewelProtos.JewelListOrBuilder> 
          getJewelListFieldBuilder() {
        if (jewelListBuilder_ == null) {
          jewelListBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              qxmobile.protobuf.JewelProtos.JewelList, qxmobile.protobuf.JewelProtos.JewelList.Builder, qxmobile.protobuf.JewelProtos.JewelListOrBuilder>(
                  jewelList_,
                  getParentForChildren(),
                  isClean());
          jewelList_ = null;
        }
        return jewelListBuilder_;
      }

      // optional bool Succes = 4;
      private boolean succes_ ;
      /**
       * <code>optional bool Succes = 4;</code>
       *
       * <pre>
       *某些操作是否成功
       * </pre>
       */
      public boolean hasSucces() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool Succes = 4;</code>
       *
       * <pre>
       *某些操作是否成功
       * </pre>
       */
      public boolean getSucces() {
        return succes_;
      }
      /**
       * <code>optional bool Succes = 4;</code>
       *
       * <pre>
       *某些操作是否成功
       * </pre>
       */
      public Builder setSucces(boolean value) {
        bitField0_ |= 0x00000008;
        succes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool Succes = 4;</code>
       *
       * <pre>
       *某些操作是否成功
       * </pre>
       */
      public Builder clearSucces() {
        bitField0_ = (bitField0_ & ~0x00000008);
        succes_ = false;
        onChanged();
        return this;
      }

      // repeated int64 RedPoint = 5;
      private java.util.List<java.lang.Long> redPoint_ = java.util.Collections.emptyList();
      private void ensureRedPointIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          redPoint_ = new java.util.ArrayList<java.lang.Long>(redPoint_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int64 RedPoint = 5;</code>
       *
       * <pre>
       *用于发送红点推送信息
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getRedPointList() {
        return java.util.Collections.unmodifiableList(redPoint_);
      }
      /**
       * <code>repeated int64 RedPoint = 5;</code>
       *
       * <pre>
       *用于发送红点推送信息
       * </pre>
       */
      public int getRedPointCount() {
        return redPoint_.size();
      }
      /**
       * <code>repeated int64 RedPoint = 5;</code>
       *
       * <pre>
       *用于发送红点推送信息
       * </pre>
       */
      public long getRedPoint(int index) {
        return redPoint_.get(index);
      }
      /**
       * <code>repeated int64 RedPoint = 5;</code>
       *
       * <pre>
       *用于发送红点推送信息
       * </pre>
       */
      public Builder setRedPoint(
          int index, long value) {
        ensureRedPointIsMutable();
        redPoint_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 RedPoint = 5;</code>
       *
       * <pre>
       *用于发送红点推送信息
       * </pre>
       */
      public Builder addRedPoint(long value) {
        ensureRedPointIsMutable();
        redPoint_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 RedPoint = 5;</code>
       *
       * <pre>
       *用于发送红点推送信息
       * </pre>
       */
      public Builder addAllRedPoint(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureRedPointIsMutable();
        super.addAll(values, redPoint_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 RedPoint = 5;</code>
       *
       * <pre>
       *用于发送红点推送信息
       * </pre>
       */
      public Builder clearRedPoint() {
        redPoint_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:qxmobile.protobuf.EquipOperationResp)
    }

    static {
      defaultInstance = new EquipOperationResp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:qxmobile.protobuf.EquipOperationResp)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_qxmobile_protobuf_JewelInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_qxmobile_protobuf_JewelInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_qxmobile_protobuf_JewelList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_qxmobile_protobuf_JewelList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_qxmobile_protobuf_EquipOperationReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_qxmobile_protobuf_EquipOperationReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_qxmobile_protobuf_EquipOperationResp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_qxmobile_protobuf_EquipOperationResp_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013Jewel.proto\022\021qxmobile.protobuf\"L\n\tJewe" +
      "lInfo\022\016\n\006itemId\030\001 \002(\005\022\013\n\003exp\030\002 \002(\005\022\021\n\tpo" +
      "ssionId\030\003 \002(\005\022\017\n\007equlpId\030\004 \001(\003\"Z\n\tJewelL" +
      "ist\022\017\n\007equlpId\030\001 \002(\003\022\020\n\010jewelNum\030\002 \002(\005\022*" +
      "\n\004list\030\003 \003(\0132\034.qxmobile.protobuf.JewelIn" +
      "fo\"k\n\021EquipOperationReq\022\014\n\004type\030\001 \002(\005\022\017\n" +
      "\007equlpId\030\002 \002(\003\022\017\n\007jewelId\030\003 \001(\003\022\021\n\tpossi" +
      "onId\030\004 \001(\005\022\023\n\013cailiaoList\030\005 \003(\003\"\245\001\n\022Equi" +
      "pOperationResp\022\014\n\004type\030\001 \002(\005\022.\n\010OneJewel" +
      "\030\002 \001(\0132\034.qxmobile.protobuf.JewelInfo\022/\n\t",
      "JewelList\030\003 \001(\0132\034.qxmobile.protobuf.Jewe" +
      "lList\022\016\n\006Succes\030\004 \001(\010\022\020\n\010RedPoint\030\005 \003(\003B" +
      "\rB\013JewelProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_qxmobile_protobuf_JewelInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_qxmobile_protobuf_JewelInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_qxmobile_protobuf_JewelInfo_descriptor,
              new java.lang.String[] { "ItemId", "Exp", "PossionId", "EqulpId", });
          internal_static_qxmobile_protobuf_JewelList_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_qxmobile_protobuf_JewelList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_qxmobile_protobuf_JewelList_descriptor,
              new java.lang.String[] { "EqulpId", "JewelNum", "List", });
          internal_static_qxmobile_protobuf_EquipOperationReq_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_qxmobile_protobuf_EquipOperationReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_qxmobile_protobuf_EquipOperationReq_descriptor,
              new java.lang.String[] { "Type", "EqulpId", "JewelId", "PossionId", "CailiaoList", });
          internal_static_qxmobile_protobuf_EquipOperationResp_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_qxmobile_protobuf_EquipOperationResp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_qxmobile_protobuf_EquipOperationResp_descriptor,
              new java.lang.String[] { "Type", "OneJewel", "JewelList", "Succes", "RedPoint", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
